plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.cookandroid.myapplication"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-auth:19.1.0'
    implementation 'com.firebaseui:firebase-ui-auth:4.2.1'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //implementation 'com.google.firebase:firebase-database-ktx:20.1.0'
    //implementation 'com.google.code.gson.gson:2.8.6'
    //implementation 'com.squareup.okhttp3:logging-interceptor'
    //retrofit을 사용하기 위한 프로젝트
   // implementation 'com.squareup.retrofit2:retrofit:2.9.0'//레트로핏 사용을 위해
    //implementation 'com.squareup.retrofit2:converter-gson:2.9.0'//gson 변환을 위해
    /*Retrofit2는 HTTP API를 자바 인터페이스 형태로 사용하는 라이브러리이고
    응답 데이터가 json형식이라서 java <-> gson파싱을 위한 Gson라이브러리와 Gson컨버터 라이브러리를 추가해야 한다.
    서버와 응답하는 데이터 형식은 JSON 형식이기 때문에 Retrofit에서 Call<>객체 안에서 응답될 Body 타입의 데이터 클래스와 호환되지 않는다.
    따라서 서버에서 응답되는 json 포맷의 데이터를 데이터 클래스 객체로 파싱해주어야 한다.
    이는 클라이언트에서 서버에 데이터를 보낼때도 데이터 클래스 객체를 json 형식으로 보내야 서버가 받아볼 수 있다.
    데이터 클래스 <-> json 간의 파싱을 위해 Retrofit 라이브러리에 Gson이라는 Java 라이브러리를 추가로 묶어서 사용하면 된다.
    (Gson은 json 문자열과 java 객체를 서로 변환해주는 라이브러리)*/

    //implementation fileTree(dir: 'libs', include: ['*.jar'])
   // implementation 'com.google.android.gms:play-services-maps:18.1.0'
   // implementation 'com.google.android.gms:play-services-location:21.0.1'
    //implementation 'com.kakao.sdk:usermgmt:1.27.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //implementation platform('com.google.firebase:firebase-bom:31.3.0')

    implementation "com.kakao.sdk:v2-user:2.6.0" // 카카오 로그인



}
